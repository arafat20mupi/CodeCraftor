import { useState, useCallback } from 'react';
import { Link } from 'react-router-dom';

export const Slider = () => {
    const [currentSlider, setCurrentSlider] = useState(0);

    const sliderItems = [
        {
            title: 'Platform helped me to increase my sales and revenue generated by bluebase technologies',
            description: 'One aspect that sets IT Services apart is their proactive approach to security. In today\'s digital landscape, protecting our sensitive data is of utmost importance.',
            name: 'Serana Belluci',
            position: 'Product Designer',
            avatar: 'https://randomuser.me/api/portraits/women/44.jpg',
            link: 'https://randomuser.me/api/portraits/women'
        },
        {
            title: 'Platform helped me to increase my sales and revenue generated by bluebase technologies',
            description: 'One aspect that sets IT Services apart is their proactive approach to security. In today\'s digital landscape, protecting our sensitive data is of utmost importance.',
            name: 'Serana Belluci',
            position: 'Product Designer',
            avatar: 'https://images.pexels.com/photos/775358/pexels-photo-775358.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
            link: 'https://randomuser.me/api/portraits/women'
        },
        {
            title: 'Platform helped me to increase my sales and revenue generated by bluebase technologies',
            description: 'One aspect that sets IT Services apart is their proactive approach to security. In today\'s digital landscape, protecting our sensitive data is of utmost importance.',
            name: 'Serana Belluci',
            position: 'Product Designer',
            avatar: 'https://images.pexels.com/photos/1043473/pexels-photo-1043473.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
            link: 'https://randomuser.me/api/portraits/women'
        }
        // Add more items as needed
    ];

    const prevSlider = () => {
        setCurrentSlider((currentSlider) =>
            currentSlider === 0 ? sliderItems.length - 1 : currentSlider - 1
        );
    };

    const nextSlider = useCallback(() => {
        setCurrentSlider((currentSlider) =>
            currentSlider === sliderItems.length - 1 ? 0 : currentSlider + 1
        );
    }, [sliderItems.length]);

    return (
        <div data-aos="fade-up" data-aos-duration="2000" className="relative mx-auto w-full max-w-6xl my-10 px-4">
            {/* arrow left */}
            <button
                onClick={prevSlider}
                className="absolute left-0 top-1/2 transform -translate-y-1/2 flex items-center justify-center w-10 h-10 bg-[#2563EB] text-white rounded-full shadow-lg"
                style={{ zIndex: 1 }}
            >
                <svg
                    viewBox="0 0 1024 1024"
                    className="h-6 w-6"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="#ffffff"
                >
                    <path d="M685.248 104.704a64 64 0 010 90.496L368.448 512l316.8 316.8a64 64 0 01-90.496 90.496L232.704 557.248a64 64 0 010-90.496l362.048-362.048a64 64 0 0190.496 0z"></path>
                </svg>
            </button>
            {/* arrow right */}
            <button
                onClick={nextSlider}
                className="absolute right-0 top-1/2 transform -translate-y-1/2 flex items-center justify-center w-10 h-10 bg-[#2563EB] text-white rounded-full shadow-lg"
                style={{ zIndex: 1 }}
            >
                <svg
                    viewBox="0 0 1024 1024"
                    className="h-6 w-6"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="#ffffff"
                    transform="rotate(180)"
                >
                    <path d="M685.248 104.704a64 64 0 010 90.496L368.448 512l316.8 316.8a64 64 0 01-90.496 90.496L232.704 557.248a64 64 0 010-90.496l362.048-362.048a64 64 0 0190.496 0z"></path>
                </svg>
            </button>
            <div className="w-full h-[600px] overflow-hidden relative">
                {/* Add a wrapper to the slides */}
                <div
                    className="w-full h-full flex transition-transform duration-500 ease-in-out"
                    style={{ transform: `translateX(-${currentSlider * 100}%)` }}
                >
                    {/* Slide Content */}
                    {sliderItems.map((item, index) => (
                        <div key={index} className="w-full flex-shrink-0 p-4 sm:p-6 md:p-8 lg:p-10">
                            <div className="w-full h-full flex justify-center items-center bg-gray-900 text-white rounded-lg p-6 md:px-16">
                                <div className="text-left">
                                    <Link to={item.link} className='btn btn-primary text-white mb-2'>Linked in</Link>
                                    <h3 className="text-base sm:text-lg md:text-xl font-semibold mb-4">{item.title}</h3>
                                    <p className="text-sm sm:text-base md:text-lg mb-6">{item.description}</p>
                                    <div className="flex items-center">
                                        <img
                                            src={item.avatar}
                                            alt={`Avatar of ${item.name}`}
                                            className="h-10 w-10 sm:h-12 sm:w-12 md:h-14 md:w-14 rounded-full mr-4"
                                        />
                                        <div>
                                            <p className="font-semibold text-sm sm:text-base">{item.name}</p>
                                            <p className="text-xs sm:text-sm text-gray-400">{item.position}</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
};
